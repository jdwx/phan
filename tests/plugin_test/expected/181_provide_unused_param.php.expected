src/181_provide_unused_param.php:2 PhanParamNameIndicatingUnused Saw a parameter named $unused. If this was used to indicate that a parameter is unused to Phan, consider using @unused-param after a param comment or suppressing unused parameter warnings instead. PHP 8.0 introduces support for named parameters, so changing names to suppress unused parameter warnings is no longer recommended.
src/181_provide_unused_param.php:5 PhanProvidingUnusedParameter Providing an unused optional parameter $unused to \test181($unused = false) defined at src/181_provide_unused_param.php:2
src/181_provide_unused_param.php:7 PhanParamNameIndicatingUnusedInClosure Saw a parameter named $unusedParam2. If this was used to indicate that a parameter is unused to Phan, consider using @unused-param after a param comment or suppressing unused parameter warnings instead. PHP 8.0 introduces support for named parameters, so changing names to suppress unused parameter warnings is no longer recommended.
src/181_provide_unused_param.php:7 PhanPluginPossiblyStaticClosure Closure($param1, $unusedParam2 = 'default') can be static
src/181_provide_unused_param.php:9 PhanProvidingUnusedParameterOfClosure Providing an unused optional parameter $unusedParam2 to Closure($param1, $unusedParam2 = 'default') defined at src/181_provide_unused_param.php:7
src/181_provide_unused_param.php:9 PhanTypeMismatchArgument Argument 2 ($unusedParam2) is 2 of type 2 but Closure($param1, $unusedParam2 = 'default') takes string defined at src/181_provide_unused_param.php:7
src/181_provide_unused_param.php:11 PhanParamNameIndicatingUnused Saw a parameter named $unusedVar. If this was used to indicate that a parameter is unused to Phan, consider using @unused-param after a param comment or suppressing unused parameter warnings instead. PHP 8.0 introduces support for named parameters, so changing names to suppress unused parameter warnings is no longer recommended.
src/181_provide_unused_param.php:14 PhanDeprecatedImplicitNullableParam Implicit nullable parameters (int $x = null) have been deprecated in PHP 8.4
src/181_provide_unused_param.php:14 PhanParamNameIndicatingUnused Saw a parameter named $_. If this was used to indicate that a parameter is unused to Phan, consider using @unused-param after a param comment or suppressing unused parameter warnings instead. PHP 8.0 introduces support for named parameters, so changing names to suppress unused parameter warnings is no longer recommended.
src/181_provide_unused_param.php:14 PhanParamReqAfterOpt Required parameter (string $required) follows optional (?int $x = null)
src/181_provide_unused_param.php:17 PhanParamNameIndicatingUnused Saw a parameter named $unusedParam. If this was used to indicate that a parameter is unused to Phan, consider using @unused-param after a param comment or suppressing unused parameter warnings instead. PHP 8.0 introduces support for named parameters, so changing names to suppress unused parameter warnings is no longer recommended.
src/181_provide_unused_param.php:20 PhanUnreferencedClass Possibly zero references to class \Override181
src/181_provide_unused_param.php:25 PhanProvidingUnusedParameter Providing an unused optional parameter $unusedVar to \Example181::__construct(int $unusedVar = 0) defined at src/181_provide_unused_param.php:11
src/181_provide_unused_param.php:26 PhanProvidingUnusedParameter Providing an unused optional parameter $_ to \Example181::dump(?int $x = null, string $required, int $_ = 2) defined at src/181_provide_unused_param.php:14
